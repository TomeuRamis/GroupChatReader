out.write("<!DOCTYPE html>\n")
out.write("<html lang=\"en\">\n")
out.write("\n")
out.write("<head>\n")
out.write("  <meta charset=\"UTF-8\">\n")
out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n")
out.write("  <title>GroupChatReader - (group-name)</title>\n")
out.write("  <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.10.23/css/jquery.dataTables.min.css\">\n")
out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n")
out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n")
out.write("  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n")
out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n")
out.write("  <script src=\"https://cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js\"></script>\n")
out.write("  <script src=\"https://code.highcharts.com/highcharts.js\"></script>\n")
out.write("  <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n")
out.write("  <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\n")
out.write("  <script src=\"https://code.highcharts.com/modules/accessibility.js\"></script>\n")
out.write("</head>\n")
out.write("\n")
out.write("<body>\n")
out.write("  <ul class=\"nav nav-tabs\">\n")
out.write("    <li class=\"nav-item\">\n")
out.write("      <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Home</a>\n")
out.write("    </li>\n")
out.write("    <li class=\"nav-item\">\n")
out.write("      <a class=\"nav-link\" data-toggle=\"tab\" href=\"#menustickers\">Stickers</a>\n")
out.write("    </li>\n")
out.write("    <li class=\"nav-item\">\n")
out.write("      <a class=\"nav-link\" data-toggle=\"tab\" href=\"#menupalabras\">Palabras</a>\n")
out.write("    </li>\n")
out.write("    <li class=\"nav-item\">\n")
out.write("      <a class=\"nav-link\" data-toggle=\"tab\" href=\"#menuletras\">Letras</a>\n")
out.write("    </li>\n")
out.write("  </ul>\n")
out.write("  <!-- Tab panes -->\n")
out.write("  <div class=\"tab-content\">\n")
out.write("    <!------------------------------ Resumen ------------------------------->\n")
out.write("    <div class=\"tab-pane container active\" id=\"home\">\n")
out.write("      <h1 class=\"mt-2\">Analisis de datos para <span id=\"nombrechat\"></span></h1>\n")
out.write("\n")
out.write("      <h2 class=\"mt-2\">Total de mensajes: <span id=\"totalmensajes\">XXXXXX</span></h2>\n")
out.write("      <div class=\"container-fluid border row rounded ml-0 px-4 my-4\">\n")
out.write("        <div id=\"miembroshome\" class=\"col-sm-4 py-3 border-right\">\n")
out.write("          <h3 class=\"h5\">Mensajes por miembro</h3>\n")
out.write("        </div>\n")
out.write("        <div class=\"col-sm-8\">\n")
out.write("          <div id=\"container-mensajes\"></div>\n")
out.write("        </div>\n")
out.write("      </div>\n")
out.write("\n")
out.write("      <h2 class=\"mt-2\">Actividad</h2>\n")
out.write("      <div class=\"container border row rounded ml-0 px-4\">\n")
out.write("        <div id=\"container-actividad\" class=\"col-sm-12\"></div>\n")
out.write("      </div>\n")
out.write("    </div>\n")
out.write("    <!------------------------------ Stickers ------------------------------->\n")
out.write("    <div class=\"tab-pane container fade\" id=\"menustickers\">\n")
out.write("      <h1 class=\"mt-2\">Stickers</h1>\n")
out.write("      <!-- SELECCIÓN DE PARÁMETROS-->\n")
out.write("      <div id=\"checkstickers\" class=\"container-fluid border rounded px-4 py-2 my-4\"></div>\n")
out.write("      <!-- TABLA -->\n")
out.write("      <table id=\"tablaStickers\" class=\"display\">\n")
out.write("        <thead>\n")
out.write("          <tr>\n")
out.write("            <th>Sticker</th>\n")
out.write("            <th>Apariciones</th>\n")
out.write("          </tr>\n")
out.write("        </thead>\n")
out.write("        <tbody id=\"bodytstickers\"></tbody>\n")
out.write("      </table>\n")
out.write("    </div>\n")
out.write("    <!------------------------------ Palabras ------------------------------->\n")
out.write("    <div class=\"tab-pane container fade\" id=\"menupalabras\">\n")
out.write("      <h1 class=\"mt-2\">Palabras</h1>\n")
out.write("      <!-- SELECCIÓN DE PARÁMETROS-->\n")
out.write("      <div class=\"container-fluid row border rounded my-4\">\n")
out.write("        <div class=\"container border-right col-sm-5 px-4 py-2\">\n")
out.write("          <div class=\"container-fluid px-0\">\n")
out.write("            <label for=\"minletras\" class=\"mb-1\"><b>Número mínimo de caracteres: <span\n")
out.write("                  id=\"pminletras\">1</span></b></label>\n")
out.write("            <input type=\"range\" id=\"minletras\" min=1 max=20 step=1 value=1 class=\"form-control-range\"><br>\n")
out.write("          </div>\n")
out.write("          <div id=\"checkpalabras\" class=\"container px-0 mx-0\">\n")
out.write("            <p class=\"mb-3\"><b>Participantes del chat</b></p>\n")
out.write("          </div>\n")
out.write("        </div>\n")
out.write("        <!-- GRÁFICA -->\n")
out.write("        <div class=\"container col-sm-7\">\n")
out.write("          <div id=\"container-palabras\"></div>\n")
out.write("        </div>\n")
out.write("      </div>\n")
out.write("      <!-- TABLA -->\n")
out.write("      <table id=\"tablaPalabras\" class=\"display\" width=\"100%\">\n")
out.write("        <thead>\n")
out.write("          <tr>\n")
out.write("            <th>Palabra</th>\n")
out.write("            <th>Apariciones</th>\n")
out.write("          </tr>\n")
out.write("        </thead>\n")
out.write("        <tbody id=\"bodytpalabras\"></tbody>\n")
out.write("      </table>\n")
out.write("    </div>\n")
out.write("    <!------------------------------ Letras ------------------------------->\n")
out.write("    <div class=\"tab-pane container fade\" id=\"menuletras\">\n")
out.write("      <h1 class=\"mt-2\">Letras</h1>\n")
out.write("      <!-- TABLA -->\n")
out.write("      <table id=\"tablaLetras\" class=\"display\" width=\"100%\"></table>\n")
out.write("    </div>\n")
out.write("  </div>\n")
out.write("  <!--------------------------------------------------------------------------------------------\\n")
out.write("  |                                    CÓDIGO JAVASCRIPT                                        |\n")
out.write("  \--------------------------------------------------------------------------------------------->\n")
out.write("  <script>\n")
out.write("    var pieColors = (function () {\n")
out.write("      var colors = [],\n")
out.write("        base = Highcharts.getOptions().colors[0],\n")
out.write("        i;\n")
out.write("\n")
out.write("      for (i = 0; i < 10; i += 1) {\n")
out.write("        colors.push(Highcharts.color(base).brighten((i - 3) / 7).get());\n")
out.write("      }\n")
out.write("      return colors;\n")
out.write("    }());\n")
out.write("    // ------------- DEFINICIÓN DE VARIABLES --------------\n")
out.write("    nombrechat = \"Teide\";\n")
out.write("    datamiembros = [{ name: \"carlos\", y: 3 }, { name: \"federico\", y: 6 }];\n")
out.write("    datahoras = [[0, 10], [1, 5], [2, 20], [3, 10], [4, 10]];\n")
out.write("    traduccionstickers = [\"\", \"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\"];\n")
out.write("    datastickers = { \"carlos\": [{ \"image\": 0, \"cant\": 2 }, { \"image\": 1, \"cant\": 5 }], \"federico\": [{ \"image\": 0, \"cant\": 12 }, { \"image\": 1, \"cant\": 9 }] };\n")
out.write("    datapalabras = { \"carlos\": [{ \"name\": \"patfata\", \"cant\": 2 },{ \"name\": \"pata2ta\", \"cant\": 2 },{ \"name\": \"p3atata\", \"cant\": 2 },{ \"name\": \"patat4a\", \"cant\": 2 },{ \"name\": \"pa5tata\", \"cant\": 2 },{ \"name\": \"pa6tata\", \"cant\": 2 },{ \"name\": \"pat7ata\", \"cant\": 2 },{ \"name\": \"pat8ata\", \"cant\": 2 },{ \"name\": \"pa9tata\", \"cant\": 2 },{ \"name\": \"pa0tata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patsata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"paatata\", \"cant\": 2 },{ \"name\": \"patqata\", \"cant\": 2 },{ \"name\": \"patcata\", \"cant\": 2 },{ \"name\": \"pawtata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"pataeta\", \"cant\": 2 },{ \"name\": \"patrata\", \"cant\": 2 },{ \"name\": \"pattata\", \"cant\": 2 },{ \"name\": \"patyata\", \"cant\": 2 },{ \"name\": \"pautata\", \"cant\": 2 },{ \"name\": \"paitata\", \"cant\": 2 },{ \"name\": \"paotata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patapta\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 },{ \"name\": \"patata\", \"cant\": 2 }, { \"name\": \"pepinillo\", \"cant\": 5 }], \"federico\": [{ \"name\": \"patata\", \"cant\": 12 }, { \"name\": \"pepinillo\", \"cant\": 9 }] };\n")
out.write("    dataletras = [[\"a\", 1], [\"b\", 0], [\"b\", 0], [\"b\", 0], [\"b\", 0], [\"b\", 0], [\"b\", 0]];\n")
out.write("    // --------------------- SCRIPTS ----------------------\n")
out.write("    $(document).ready(() => {\n")
out.write("\n")
out.write("      // ---------------- SCRIPT HOME ---------------------\n")
out.write("      $(\"#nombrechat\").html(nombrechat);\n")
out.write("      total = 0;\n")
out.write("      for (i = 0; i < datamiembros.length; i++) {\n")
out.write("        miembro = datamiembros[i];\n")
out.write("        total += miembro.y\n")
out.write("        $(\"#miembroshome\").append('<p class=\"my-0\">' + miembro.name + ': ' + miembro.y + '</p>')\n")
out.write("      }\n")
out.write("      $(\"#totalmensajes\").html(total);\n")
out.write("      // Chart porcentaje mensajes\n")
out.write("      Highcharts.chart('container-mensajes', {\n")
out.write("        chart: {\n")
out.write("          plotBackgroundColor: null,\n")
out.write("          plotBorderWidth: null,\n")
out.write("          plotShadow: false,\n")
out.write("          type: 'pie'\n")
out.write("        },\n")
out.write("        title: {\n")
out.write("          text: 'Porcentaje de mensajes por miembro del chat'\n")
out.write("        },\n")
out.write("        tooltip: {\n")
out.write("          pointFormat: '{series.name}: <b>{point.y}</b>'\n")
out.write("        },\n")
out.write("        accessibility: {\n")
out.write("          point: {\n")
out.write("            valueSuffix: '%'\n")
out.write("          }\n")
out.write("        },\n")
out.write("        plotOptions: {\n")
out.write("          pie: {\n")
out.write("            allowPointSelect: true,\n")
out.write("            cursor: 'pointer',\n")
out.write("            colors: pieColors,\n")
out.write("            dataLabels: {\n")
out.write("              enabled: true,\n")
out.write("              format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\n")
out.write("              distance: -25,\n")
out.write("              filter: {\n")
out.write("                property: 'percentage',\n")
out.write("                operator: '>',\n")
out.write("                value: 4\n")
out.write("              }\n")
out.write("            }\n")
out.write("          }\n")
out.write("        },\n")
out.write("        series: [{\n")
out.write("          name: 'Share',\n")
out.write("          data: datamiembros\n")
out.write("        }]\n")
out.write("      });\n")
out.write("      //Chart actividad por horas\n")
out.write("      Highcharts.chart('container-actividad', {\n")
out.write("        chart: {\n")
out.write("          type: 'column'\n")
out.write("        },\n")
out.write("        title: {\n")
out.write("          text: 'Total de mensajes por hora del día'\n")
out.write("        },\n")
out.write("        xAxis: {\n")
out.write("          type: 'category',\n")
out.write("          labels: {\n")
out.write("            style: {\n")
out.write("              fontSize: '13px',\n")
out.write("              fontFamily: 'Verdana, sans-serif'\n")
out.write("            }\n")
out.write("          }\n")
out.write("        },\n")
out.write("        yAxis: {\n")
out.write("          min: 0,\n")
out.write("          title: {\n")
out.write("            text: 'Número de mensajes'\n")
out.write("          }\n")
out.write("        },\n")
out.write("        legend: {\n")
out.write("          enabled: false\n")
out.write("        },\n")
out.write("        tooltip: {\n")
out.write("          pointFormat: 'Mensajes: <b>{point.y}</b>'\n")
out.write("        },\n")
out.write("        series: [{\n")
out.write("          name: 'Population',\n")
out.write("          data: datahoras\n")
out.write("        }]\n")
out.write("      });\n")
out.write("      // ---------------- SCRIPT STICKERS ---------------------\n")
out.write("      for (let i = 0; i < datamiembros.length; i++) {\n")
out.write("        miembro = datamiembros[i].name;\n")
out.write("        $(\"#checkstickers\").append('<label class=\"form-check-label mx-3\">' +\n")
out.write("          '<input type=\"checkbox\" class=\"form-check-input csticker\" checked value=\"' + miembro + '\">' + miembro + '</label>');\n")
out.write("      }\n")
out.write("      let cstickerhandler = () => {\n")
out.write("        //vaciar la tabla\n")
out.write("        $(\"#bodytstickers\").empty();\n")
out.write("        checkboxes = $('.csticker');\n")
out.write("        dataframe = [];\n")
out.write("        datatable = [];\n")
out.write("        for (let i = 0; i < checkboxes.length; i++) {\n")
out.write("          if (checkboxes[i].checked) {\n")
out.write("            miembro = checkboxes[i].value;\n")
out.write("            dataframe = combinarstickers(dataframe, datastickers[miembro]);\n")
out.write("          }\n")
out.write("        }\n")
out.write("        dataframe.sort((a,b)=>{return b.cant - a.cant})\n")
out.write("        for (let i = 0; i < dataframe.length; i++) {\n")
out.write("          let img = dataframe[i].image;\n")
out.write("          let cant = dataframe[i].cant;\n")
out.write("          datatable.push(['<img width=100 src=\"data:image/jpeg;base64,' + traduccionstickers[img] + '\"/>',cant])\n")
out.write("          //$(\"#bodytstickers\").append('<tr><td><img src=\"data:image/jpeg;base64,' + traduccionstickers[img] + '\"/></td><td>' + cant + '</td></tr>');\n")
out.write("        }\n")
out.write("        $('#tablaStickers').DataTable().clear().rows.add(datatable).draw();\n")
out.write("      }\n")
out.write("      $('.csticker').change(cstickerhandler);\n")
out.write("      cstickerhandler();\n")
out.write("      // ---------------- SCRIPT PALABRAS ---------------------\n")
out.write("      for (let i = 0; i < datamiembros.length; i++) {\n")
out.write("        miembro = datamiembros[i].name;\n")
out.write("        $(\"#checkpalabras\").append('<label class=\"form-check-label mx-3\">' +\n")
out.write("          '<input type=\"checkbox\" class=\"form-check-input cpalabra\" checked value=\"' + miembro + '\">' + miembro + '</label>');\n")
out.write("      }\n")
out.write("      let cpalabrahandler = () => {\n")
out.write("        //vaciar la tabla\n")
out.write("        //$(\"#bodytpalabras\").empty();\n")
out.write("        checkboxes = $('.cpalabra');\n")
out.write("        dataframe = [];\n")
out.write("        datatable = [];\n")
out.write("        datachart = [];\n")
out.write("        for (let i = 0; i < checkboxes.length; i++) {\n")
out.write("          if (checkboxes[i].checked) {\n")
out.write("            miembro = checkboxes[i].value;\n")
out.write("            dataframe = combinarpalabras(dataframe, datapalabras[miembro]);\n")
out.write("          }\n")
out.write("        }\n")
out.write("        dataframe.sort((a,b)=>{return b.cant - a.cant})\n")
out.write("        for (let i = 0; i < dataframe.length; i++) {\n")
out.write("          let pal = dataframe[i].name;\n")
out.write("          let cant = dataframe[i].cant;\n")
out.write("          if(pal.length >= $(\"#minletras\").val()){\n")
out.write("            if (datachart.length <10) datachart.push([trimstring(pal,20),cant]);\n")
out.write("            datatable.push([trimstring(pal,60),cant]);\n")
out.write("          }\n")
out.write("        }\n")
out.write("        $('#tablaPalabras').DataTable().clear().rows.add(datatable).draw();\n")
out.write("        let drawchart = (data) => {\n")
out.write("          Highcharts.chart('container-palabras', {\n")
out.write("            chart: {\n")
out.write("              type: 'column'\n")
out.write("            },\n")
out.write("            title: {\n")
out.write("              text: 'Las 10 palabras más comunes'\n")
out.write("            },\n")
out.write("            xAxis: {\n")
out.write("              type: 'category',\n")
out.write("              labels: {\n")
out.write("                rotation: -45,\n")
out.write("                style: {\n")
out.write("                  fontSize: '13px',\n")
out.write("                  fontFamily: 'Verdana, sans-serif'\n")
out.write("                }\n")
out.write("              }\n")
out.write("            },\n")
out.write("            yAxis: {\n")
out.write("              min: 0,\n")
out.write("              title: {\n")
out.write("                text: 'Apariciones'\n")
out.write("              }\n")
out.write("            },\n")
out.write("            legend: {\n")
out.write("              enabled: false\n")
out.write("            },\n")
out.write("            tooltip: {\n")
out.write("              pointFormat: 'Apariciones: <b>{point.y}</b>'\n")
out.write("            },\n")
out.write("            series: [{\n")
out.write("              name: 'Population',\n")
out.write("              data: data\n")
out.write("            }]\n")
out.write("          });\n")
out.write("        }\n")
out.write("        drawchart(datachart);\n")
out.write("      }\n")
out.write("      $('.cpalabra').change(cpalabrahandler);\n")
out.write("      cpalabrahandler();\n")
out.write("      $('#minletras').on(\"input\", () => {\n")
out.write("        $(\"#pminletras\").html($(\"#minletras\").val());\n")
out.write("      });\n")
out.write("      $('#minletras').on(\"change\", cpalabrahandler);\n")
out.write("      $('#tablaPalabras').DataTable();\n")
out.write("\n")
out.write("      // ---------------- SCRIPT LETRAS ---------------------\n")
out.write("      $('#tablaLetras').DataTable({\n")
out.write("        data: dataletras,\n")
out.write("        columns: [\n")
out.write("          { title: \"Letra\" },\n")
out.write("          { title: \"Apariciones\" }\n")
out.write("        ]\n")
out.write("      });\n")
out.write("    });\n")
out.write("    function combinarstickers(array1, array2) {\n")
out.write("      let nuevoarray = [];\n")
out.write("      for (let i = 0; i < array1.length; i++)\n")
out.write("        nuevoarray.push(Object.assign({}, array1[i]));\n")
out.write("      for (let i = 0; i < array2.length; i++) {\n")
out.write("        found = false;\n")
out.write("        nuevoelem = array2[i];\n")
out.write("        for (let j = 0; j < nuevoarray.length; j++) {\n")
out.write("          elemcomp = nuevoarray[j];\n")
out.write("          if (elemcomp.image == nuevoelem.image) {\n")
out.write("            elemcomp.cant += nuevoelem.cant;\n")
out.write("            found = true;\n")
out.write("            break;\n")
out.write("          }\n")
out.write("        }\n")
out.write("        if (!found) nuevoarray.push(Object.assign({}, nuevoelem));\n")
out.write("      }\n")
out.write("      return nuevoarray;\n")
out.write("    }\n")
out.write("    function combinarpalabras(array1, array2) {\n")
out.write("      let nuevoarray = [];\n")
out.write("      for (let i = 0; i < array1.length; i++)\n")
out.write("        nuevoarray.push(Object.assign({}, array1[i]));\n")
out.write("      for (let i = 0; i < array2.length; i++) {\n")
out.write("        found = false;\n")
out.write("        nuevoelem = array2[i];\n")
out.write("        for (let j = 0; j < nuevoarray.length; j++) {\n")
out.write("          elemcomp = nuevoarray[j];\n")
out.write("          if (elemcomp.name == nuevoelem.name) {\n")
out.write("            elemcomp.cant += nuevoelem.cant;\n")
out.write("            found = true;\n")
out.write("            break;\n")
out.write("          }\n")
out.write("        }\n")
out.write("        if (!found) nuevoarray.push(Object.assign({}, nuevoelem));\n")
out.write("      }\n")
out.write("      return nuevoarray;\n")
out.write("    }\n")
out.write("    function trimstring(str,length){\n")
out.write("      nstr = str;\n")
out.write("      if(str.length > length){\n")
out.write("        nstr = str.substr(0,60) + \"...\";\n")
out.write("      }\n")
out.write("      return nstr;\n")
out.write("    }\n")
out.write("  </script>\n")
out.write("</body>\n")
out.write("\n")
out.write("</html>\n")
